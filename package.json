{
  "name": "discord-bot",
  "version": "1.0.0",
  "description": "Discord 음성 채널 활동 추적 봇",
  "main": "src/index.js",
  "type": "module",
  "scripts": {
    "start": "node src/index.js",
    "register": "node scripts/registerCommands.js",
    "dev": "nodemon src/index.js",
    "pm2:start": "pm2 start ecosystem.config.cjs",
    "pm2:stop": "pm2 stop discord-bot",
    "pm2:restart": "pm2 restart discord-bot",
    "pm2:delete": "pm2 delete discord-bot",
    "pm2:logs": "pm2 logs discord-bot",
    "pm2:status": "pm2 status",
    "pm2:monit": "pm2 monit",
    "restart": "pm2 restart discord-bot",
    "logs": "pm2 logs discord-bot",
    "restart-logs": "pm2 restart discord-bot && pm2 logs discord-bot",
    "rel": "git pull && pm2 restart discord-bot && pm2 logs discord-bot",
    "errsole:dashboard": "echo 'Errsole Dashboard: http://localhost:8001'",
    "errsole:dev": "NODE_ENV=development npm run pm2:start",
    "errsole:prod": "NODE_ENV=production pm2 start ecosystem.config.cjs --env production",
    
    "prod:start": "NODE_ENV=production pm2 start ecosystem.config.cjs --env production",
    "prod:stop": "pm2 stop discord-bot",
    "prod:restart": "NODE_ENV=production pm2 restart discord-bot --env production",
    "prod:reload": "NODE_ENV=production pm2 reload discord-bot --env production",
    "prod:logs": "pm2 logs discord-bot --lines 50",
    "prod:status": "pm2 status discord-bot",
    "prod:monit": "pm2 monit",
    
    "slack:test": "node -e \"process.env.NODE_ENV='production'; process.env.ENABLE_SLACK_ALERTS='true'; import('./src/config/logger.js').then(m => m.logger.error('Slack 알림 테스트 메시지', {test: true}));\"",
    
    "deploy": "pm2 start ecosystem.config.cjs --env production",
    "undeploy": "pm2 delete discord-bot",
    
    "switch:dev": "NODE_ENV=development npm run pm2:restart",
    "switch:prod": "NODE_ENV=production npm run prod:restart",
    
    "termux:install": "pkg install python nodejs npm sqlite sqlite-dev clang make && npm install --no-optional",
    "termux:start": "NODE_ENV=production pm2 start ecosystem-termux.config.cjs --env production",
    "termux:dev": "NODE_ENV=development pm2 start ecosystem-termux.config.cjs",
    "termux:stop": "pm2 stop discord-bot",
    "termux:restart": "pm2 restart discord-bot",
    "termux:logs": "pm2 logs discord-bot",
    "termux:status": "pm2 status discord-bot", 
    "termux:monit": "pm2 monit",
    "termux:delete": "pm2 delete discord-bot",
    "termux:test": "node -e \"import('./src/config/logger-termux.js').then(m => m.logger.info('Termux 로거 테스트'));\"",
    "termux:slack-test": "node -e \"process.env.NODE_ENV='production'; process.env.ENABLE_SLACK_ALERTS='true'; import('./src/config/logger-termux.js').then(m => m.logger.error('Termux Slack 테스트', {termux: true}));\"",
    "termux:dashboard": "echo 'Termux Errsole Dashboard: http://localhost:8001'",
    
    "termux:start:external": "ERRSOLE_HOST=0.0.0.0 NODE_ENV=production pm2 start ecosystem-termux.config.cjs --env production",
    "termux:dev:external": "ERRSOLE_HOST=0.0.0.0 NODE_ENV=development pm2 start ecosystem-termux.config.cjs",
    "termux:ip": "termux-wifi-connectioninfo | grep 'ip_address' || ip route get 1.1.1.1 | grep -oP 'src \\K\\S+' || echo '핸드폰에서 설정 > Wi-Fi에서 IP 확인'",
    "termux:network-info": "echo '📱 핸드폰 네트워크 정보:' && npm run termux:ip && echo '💻 컴퓨터에서 접속 URL:' && echo 'http://$(npm run termux:ip --silent):8001'",
    "termux:dashboard:external": "echo '🌐 외부 접속 대시보드 URL:' && echo 'http://$(npm run termux:ip --silent):8001' && echo '📱 핸드폰 IP를 확인한 후 컴퓨터에서 접속하세요'",
    "termux:switch:external": "pm2 stop discord-bot && ERRSOLE_HOST=0.0.0.0 pm2 restart discord-bot",
    "termux:switch:local": "pm2 stop discord-bot && ERRSOLE_HOST=localhost pm2 restart discord-bot"
  },
  "keywords": [
    "discord",
    "bot",
    "activity",
    "tracker"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^1.10.0",
    "discord.js": "^14.18.0",
    "dotenv": "^16.4.7",
    "errsole": "^2.18.1",
    "errsole-sqlite": "^3.0.3",
    "express": "^4.21.2",
    "lowdb": "^1.0.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  }
}
