{
  "name": "discord-bot",
  "version": "1.0.0",
  "description": "Discord ÏùåÏÑ± Ï±ÑÎÑê ÌôúÎèô Ï∂îÏ†Å Î¥á",
  "main": "dist/index.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "clean": "rm -rf dist",
    "start": "NODE_ENV=production node dist/index.js",
    "dev": "NODE_ENV=development tsx src/index.ts",
    "dev:watch": "dotenv -e .env.development nodemon --exec tsx src/index.ts",
    "dev:build": "dotenv -e .env.development npm run build",
    "dev:start": "dotenv -e .env.development npm run start",
    "dev:pm2": "pm2 start ecosystem-termux.config.cjs --only discord-bot-dev --env development",
    "start:prod": "echo 'Starting production deployment...' && dotenv -e .env.production npm run build && echo '‚úÖ Build completed successfully' && pm2 delete discord-bot 2>/dev/null || echo 'No existing process to delete' && pm2 start ecosystem-termux.config.cjs --only discord-bot --env production && echo '‚úÖ PM2 process started' && sleep 2 && pm2 list && echo 'üìã Showing recent logs:' && pm2 logs discord-bot --lines 20",
    "prod:status": "pm2 list && echo '--- Status ---' && pm2 show discord-bot",
    "prod:logs": "pm2 logs discord-bot",
    "prod:restart": "pm2 restart discord-bot",
    "prod:stop": "pm2 stop discord-bot",
    "type-check": "tsc --noEmit",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "quality": "npm run type-check && npm run lint && npm run format:check",
    "test": "dotenv -e .env.development npm run quality && npm run dev:build",
    "test:jest": "dotenv -e .env.development jest",
    "test:watch": "dotenv -e .env.development jest --watch",
    "test:prod": "dotenv -e .env.production npm run quality && npm run build",
    "lint-staged": "lint-staged",
    "commitlint": "commitlint",
    "register": "dotenv -e .env.development tsx scripts/registerCommands.ts",
    "register:prod": "dotenv -e .env.production tsx scripts/registerCommands.ts",
    "setup": "pkg install python nodejs postgresql clang make && npm install",
    "ip": "termux-wifi-connectioninfo | grep 'ip_address' || ip route get 1.1.1.1 | grep -oP 'src \\K\\S+' || echo 'Ìï∏ÎìúÌè∞ÏóêÏÑú ÏÑ§Ï†ï > Wi-FiÏóêÏÑú IP ÌôïÏù∏'",
    "migrate:to-sqlite": "dotenv -e .env.development tsx scripts/migrate-to-sqlite.ts",
    "migrate:sqlite-to-postgresql": "dotenv -e .env.development tsx scripts/migrate-sqlite-to-postgresql.ts",
    "init:postgresql": "dotenv -e .env.development tsx scripts/init-postgresql.ts",
    "test:postgresql": "dotenv -e .env.development tsx scripts/test-postgresql.ts",
    "migrate:test": "dotenv -e .env.development tsx scripts/migrate-to-sqlite.ts --test",
    "migrate:status": "dotenv -e .env.development tsx scripts/migrate-to-sqlite.ts --status",
    "postgres:setup": "bash database/postgresql/setup.sh",
    "postgres:backup": "database/postgresql/backup.sh backup",
    "postgres:backup:compress": "database/postgresql/backup.sh backup --compress",
    "postgres:restore": "database/postgresql/backup.sh restore",
    "postgres:list": "database/postgresql/backup.sh list",
    "postgres:clean": "database/postgresql/backup.sh clean",
    "postgres:start:dev": "sudo systemctl start postgresql",
    "postgres:stop:dev": "sudo systemctl stop postgresql",
    "postgres:status:dev": "systemctl status postgresql",
    "postgres:restart:dev": "sudo systemctl restart postgresql",
    "postgres:logs:dev": "sudo journalctl -u postgresql -f",
    "postgres:start:prod": "pg_ctl -D $PREFIX/var/lib/postgresql start",
    "postgres:stop:prod": "pg_ctl -D $PREFIX/var/lib/postgresql stop",
    "postgres:status:prod": "pg_ctl -D $PREFIX/var/lib/postgresql status",
    "postgres:restart:prod": "pg_ctl -D $PREFIX/var/lib/postgresql restart",
    "postgres:logs:prod": "tail -f $PREFIX/var/lib/postgresql/pg_log/postgresql-$(date +%Y-%m-%d).log",
    "postgres:start": "node -e \"process.exit(process.env.NODE_ENV === 'production' ? 1 : 0)\" && npm run postgres:start:dev || npm run postgres:start:prod",
    "postgres:stop": "node -e \"process.exit(process.env.NODE_ENV === 'production' ? 1 : 0)\" && npm run postgres:stop:dev || npm run postgres:stop:prod",
    "postgres:status": "node -e \"process.exit(process.env.NODE_ENV === 'production' ? 1 : 0)\" && npm run postgres:status:dev || npm run postgres:status:prod",
    "postgres:restart": "node -e \"process.exit(process.env.NODE_ENV === 'production' ? 1 : 0)\" && npm run postgres:restart:dev || npm run postgres:restart:prod",
    "postgres:logs": "node -e \"process.exit(process.env.NODE_ENV === 'production' ? 1 : 0)\" && npm run postgres:logs:dev || npm run postgres:logs:prod",
    "prepare": "husky"
  },
  "keywords": [
    "discord",
    "bot",
    "activity",
    "tracker"
  ],
  "author": "",
  "dependencies": {
    "@types/ioredis": "^4.28.10",
    "@types/pg": "^8.15.4",
    "@types/sqlite3": "^3.1.11",
    "axios": "^1.10.0",
    "discord-optimizer": "^0.1.0",
    "discord.js": "^14.21.0",
    "dotenv": "^16.6.1",
    "errsole": "^2.18.1",
    "errsole-sqlite": "^3.0.3",
    "express": "^4.21.2",
    "ioredis": "^5.6.1",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^5.6.0",
    "reflect-metadata": "^0.2.2",
    "tsyringe": "^4.10.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.0.13",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.5.1",
    "eslint-plugin-security": "^3.0.1",
    "husky": "^9.1.7",
    "jest": "^30.0.4",
    "lint-staged": "^16.1.2",
    "nodemon": "^3.1.10",
    "prettier": "^3.6.2",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.8.3"
  },
  "lint-staged": {
    "src/**/*.ts": [
      "bash -c 'npm run type-check'",
      "prettier --write"
    ]
  }
}
